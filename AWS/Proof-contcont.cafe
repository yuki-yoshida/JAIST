require Proof Proof.cafe
provide ProofContCont

--> **********************************************************
--> (2) inv(S) and not final(S) implies cont(SS) or final(SS).
--> **********************************************************

--> ******************************************
--> Step 2-0: Define a predicate to be proved.
--> ******************************************
module! ProofContCont {
  pr(PROOFbase)

  vars S SS : State
  var CC : Bool

  pred ccont : State State
  pred contcont : State
  eq ccont(S,SS)
     = inv(S) and not final(S) implies cont(SS) or final(SS) .
  eq contcont(S)
     = not (S =(*,1)=>+ SS if CC suchThat
            not ((CC implies ccont(S,SS)) == true)
     	   { S => SS !! CC ! inv(S) ! final(S) ! cont(SS) ! final(SS) }) .
}

